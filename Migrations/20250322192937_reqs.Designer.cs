// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Vehicle_Showroom_Management_System.Migrations
{
    [DbContext(typeof(Vehicle_Showroom_Management_System_Context))]
    [Migration("20250322192937_reqs")]
    partial class reqs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Car_Brand", b =>
                {
                    b.Property<int>("Brand_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Brand_Id"));

                    b.Property<string>("Brand_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Brand_Id");

                    b.ToTable("car_Brands");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Customers", b =>
                {
                    b.Property<int>("Customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_id"));

                    b.Property<string>("Customer_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Customer_phone")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Customer_id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicle_id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("car_brand_id")
                        .HasColumnType("int");

                    b.Property<string>("vehicle_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicle_model_number")
                        .HasColumnType("int");

                    b.Property<string>("vehicle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicle_price")
                        .HasColumnType("int");

                    b.HasKey("vehicle_id");

                    b.HasIndex("branch_id");

                    b.HasIndex("car_brand_id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle_registration", b =>
                {
                    b.Property<int>("registration_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registration_id"));

                    b.Property<string>("Registration_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("registration_branch_id")
                        .HasColumnType("int");

                    b.Property<int?>("registration_brand_id")
                        .HasColumnType("int");

                    b.Property<string>("registration_chassis_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("registration_vehicle_id")
                        .HasColumnType("int");

                    b.HasKey("registration_id");

                    b.HasIndex("registration_branch_id");

                    b.HasIndex("registration_brand_id");

                    b.HasIndex("registration_vehicle_id");

                    b.ToTable("vehicle_Registrations");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.admin_register", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("admin_password")
                        .HasColumnType("int");

                    b.HasKey("admin_id");

                    b.ToTable("admin_Registers");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.branch", b =>
                {
                    b.Property<int>("branch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branch_id"));

                    b.Property<string>("branch_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("branch_id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.cart_item", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cart_id"));

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_quantity")
                        .HasColumnType("int");

                    b.Property<int?>("vehicle_id")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_id");

                    b.HasIndex("vehicle_id");

                    b.ToTable("cart_Items");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cust_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("order_amount")
                        .HasColumnType("int");

                    b.Property<string>("order_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("zip_code")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("cust_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.branch", "car_branch")
                        .WithMany()
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Car_Brand", "car_Brand")
                        .WithMany()
                        .HasForeignKey("car_brand_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("car_Brand");

                    b.Navigation("car_branch");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle_registration", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.branch", "branch")
                        .WithMany()
                        .HasForeignKey("registration_branch_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Car_Brand", "car_Brand")
                        .WithMany()
                        .HasForeignKey("registration_brand_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("registration_vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("branch");

                    b.Navigation("car_Brand");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.cart_item", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.Customers", "cart_customers")
                        .WithMany()
                        .HasForeignKey("customer_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.order", "cart_order")
                        .WithMany()
                        .HasForeignKey("order_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Vehicle", "cart_vehicle")
                        .WithMany()
                        .HasForeignKey("vehicle_id");

                    b.Navigation("cart_customers");

                    b.Navigation("cart_order");

                    b.Navigation("cart_vehicle");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.order", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("cust_id");

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
