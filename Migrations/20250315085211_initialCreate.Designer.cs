// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Vehicle_Showroom_Management_System.Migrations
{
    [DbContext(typeof(Vehicle_Showroom_Management_System_Context))]
    [Migration("20250315085211_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Car_Brand", b =>
                {
                    b.Property<int>("Brand_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Brand_Id"));

                    b.Property<string>("Brand_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Brand_Id");

                    b.ToTable("car_Brands");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicle_id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<int>("car_brand_id")
                        .HasColumnType("int");

                    b.Property<string>("vehicle_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicle_model_number")
                        .HasColumnType("int");

                    b.Property<string>("vehicle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicle_price")
                        .HasColumnType("int");

                    b.HasKey("vehicle_id");

                    b.HasIndex("branch_id");

                    b.HasIndex("car_brand_id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle_registration", b =>
                {
                    b.Property<int>("registration_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registration_id"));

                    b.Property<string>("Registration_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("registration_branch_id")
                        .HasColumnType("int");

                    b.Property<int?>("registration_brand_id")
                        .HasColumnType("int");

                    b.Property<string>("registration_chassis_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("registration_vehicle_id")
                        .HasColumnType("int");

                    b.HasKey("registration_id");

                    b.HasIndex("registration_branch_id");

                    b.HasIndex("registration_brand_id");

                    b.HasIndex("registration_vehicle_id");

                    b.ToTable("vehicle_Registrations");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.admin_register", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("admin_password")
                        .HasColumnType("int");

                    b.HasKey("admin_id");

                    b.ToTable("admin_Registers");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.branch", b =>
                {
                    b.Property<int>("branch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branch_id"));

                    b.Property<string>("branch_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("branch_id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.branch", "car_branch")
                        .WithMany()
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Car_Brand", "car_Brand")
                        .WithMany()
                        .HasForeignKey("car_brand_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("car_Brand");

                    b.Navigation("car_branch");
                });

            modelBuilder.Entity("Vehicle_Showroom_Management_System.Models.Vehicle_registration", b =>
                {
                    b.HasOne("Vehicle_Showroom_Management_System.Models.branch", "branch")
                        .WithMany()
                        .HasForeignKey("registration_branch_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Car_Brand", "car_Brand")
                        .WithMany()
                        .HasForeignKey("registration_brand_id");

                    b.HasOne("Vehicle_Showroom_Management_System.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("registration_vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("branch");

                    b.Navigation("car_Brand");
                });
#pragma warning restore 612, 618
        }
    }
}
